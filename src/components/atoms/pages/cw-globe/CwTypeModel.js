/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import {useFrame} from "@react-three/fiber";

export default function CwTypeModel({ ...props }) {
  const group = useRef()
  const { nodes } = useGLTF('/cw-globe/type.gltf')

  useFrame(({clock}) => {
    group.current.rotation.z = clock.getElapsedTime() * 0.25
    group.current.rotation.y = clock.getElapsedTime() * 0.25
    group.current.rotation.x = clock.getElapsedTime() * 0.5
  })

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh receiveShadow castShadow geometry={nodes.Curve.geometry} position={[-1.18, -1.18, 0]} rotation={[Math.PI / 2, 0, 0]} scale={10} >
        <meshStandardMaterial color={"#ffffff"} metalness={0} roughness={0}/>
      </mesh>
    </group>
  )
}

useGLTF.preload('/type.gltf')
